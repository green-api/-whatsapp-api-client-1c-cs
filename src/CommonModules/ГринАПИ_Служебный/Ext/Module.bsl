////////////////////////////////////////////////////////////////////////////////
// Подсистема "GreenAPI".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Создает новый экземпляр обработки
Функция ПолучитьОбъектОбработки() Экспорт		
	Возврат Обработки.GreenAPI.Создать();		
КонецФункции 

// Возвращает статус сервиса - авторизован
Функция СтатусСервисаАвторизирован() Экспорт	
	Возврат "authorized";	
КонецФункции		

// Возвращает статус сервиса - авторизован
Функция ТипКонтактаПользователь() Экспорт	
	Возврат "user";	
КонецФункции	

// Получить параметры подключения - Шаблон
Функция ПолучитьПараметрыПодключенияИзИсточника(ПользовательWhatsApp) Экспорт 	
	
	ПараметрыПодключения = Новый Структура("IdInstance, ApiToken");
	
	ПараметрыПодключения.IdInstance = ПользовательWhatsApp.IdInstance;
	ПараметрыПодключения.ApiToken   = ПользовательWhatsApp.ApiToken;	
	
	Возврат ПараметрыПодключения;
	
КонецФункции

// Проверят подключение к серверу Грин-АПИ
Функция ПроверитьПодключениеНаСервере(Знач ПараметрыПодключения = Неопределено) Экспорт 
	
	ОбработкаОбъект = ГринАПИ_Служебный.ПолучитьОбъектОбработки();
	ЗаполнитьЗначенияСвойств(ОбработкаОбъект, ПараметрыПодключения);
	
	Возврат ГринАПИ_Служебный.СтатусСервисаАвторизирован() = ОбработкаОбъект.ПолучитьСтатусСервиса();	
	
КонецФункции  

// Получает список всех контактов с сервера Грин-АПИ
Функция ПолучитьСписокКонтактов(Знач ПараметрыПодключения = Неопределено) Экспорт 
		
	ОбработкаОбъект = ГринАПИ_Служебный.ПолучитьОбъектОбработки();
	ЗаполнитьЗначенияСвойств(ОбработкаОбъект, ПараметрыПодключения);	
	
	Возврат ОбработкаОбъект.ПолучитьКонтакты();	
	
КонецФункции 

// Преобразует строку в число
Функция ПолучитьНомерТелефона(НомерТелефонаСтрока) Экспорт
	
	УдаляемыеСимволы = СтрСоединить(СтрРазделить(НомерТелефонаСтрока, "0123456789",     Ложь));
	Результат        = СтрСоединить(СтрРазделить(НомерТелефонаСтрока, УдаляемыеСимволы, Ложь));
	
	Возврат Число(Результат);
   
КонецФункции

#КонецОбласти

#Область ФоновыеЗадания

Функция ФоновоеЗаданиеЗапущено(КлючФоновогоЗадания) Экспорт
	
	Результат = Ложь;
	
	ПараметрыОтбора = Новый Структура("Ключ", КлючФоновогоЗадания);
	МассивЗаданий   = ФоновыеЗадания.ПолучитьФоновыеЗадания(ПараметрыОтбора);
	
	Если МассивЗаданий.Количество() = 0 Тогда
		Возврат Результат;			
	КонецЕсли;		
		
	Состояние = МассивЗаданий[0].Состояние;
	
	Если Состояние = СостояниеФоновогоЗадания.Активно Тогда				
		Результат = Истина;			
	КонецЕсли;		
	
	Возврат Результат;	  		

КонецФункции

#КонецОбласти  

#Область ПользовательСистемыВзаимодействия

Функция СоздатьПользователяСистемыВзаимодействия(Наименование, НомерТелефона) 	
	
	УстановитьПривилегированныйРежим(Истина);

	ПользовательСистемыВзаимодействия               = СистемаВзаимодействия.СоздатьПользователя();
	ПользовательСистемыВзаимодействия.Имя           = Наименование;
	ПользовательСистемыВзаимодействия.ПолноеИмя     = Наименование;
	ПользовательСистемыВзаимодействия.НомерТелефона = НомерТелефона;
	ПользовательСистемыВзаимодействия.Внешний       = Истина;

	ПользовательСистемыВзаимодействия.Записать();

	Возврат ПользовательСистемыВзаимодействия.Идентификатор;	
	
КонецФункции

Функция ПолучитьПользователяСистемыВзаимодействия(Наименование, НомерТелефона) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Наименование  = СокрЛП(Наименование);
	НомерТелефона = Формат(НомерТелефона, "ЧГ=0");	
	
	ОтборПользователейСистемыВзаимодействия     = Новый ОтборПользователейСистемыВзаимодействия;
	ОтборПользователейСистемыВзаимодействия.Имя = Наименование;	
	
	ПользователиСистемыВзаимодействия = СистемаВзаимодействия.ПолучитьПользователей(ОтборПользователейСистемыВзаимодействия);
	
	Если ПользователиСистемыВзаимодействия.Количество() = 0 Тогда
		Результат = СоздатьПользователяСистемыВзаимодействия(Наименование, НомерТелефона);
	Иначе
		Результат = ПользователиСистемыВзаимодействия[0].Идентификатор;	
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции 

#КонецОбласти 
