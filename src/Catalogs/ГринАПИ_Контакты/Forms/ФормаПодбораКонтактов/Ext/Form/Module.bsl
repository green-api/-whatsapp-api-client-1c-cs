	  	  
&НаКлиенте
Процедура УстановитьФлаг(СостояниеФлага)
	
	Для Каждого СтрокаКонтактыТаблицаЗначений Из Контакты Цикл 
		СтрокаКонтактыТаблицаЗначений.Флаг = СостояниеФлага;
	КонецЦикла;	
	
КонецПроцедуры	  

&НаКлиенте
Процедура ВыбратьВсе(Команда)	
	УстановитьФлаг(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	УстановитьФлаг(Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры 

&НаСервере
Функция ПоместитьВоВременноеХранилищеКонтакты() 
	
	КонтактыТаблицаЗначений = РеквизитФормыВЗначение("Контакты");  
	
	Отбор = Новый Структура();
	Отбор.Вставить("Флаг", Истина);
	КонтактыТаблицаЗначений = КонтактыТаблицаЗначений.НайтиСтроки(Отбор);	
	
	Если КонтактыТаблицаЗначений.Количество() = 0 Тогда	
		ВызватьИсключение ("Нет данных для загрузки.");		
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(КонтактыТаблицаЗначений);
	
КонецФункции

&НаКлиенте
Процедура Добавить(Команда)	
	
	ПараметрыСтруктура          = Новый Структура("ИмяФормы, Адрес");
	ПараметрыСтруктура.ИмяФормы = ГринАПИ_СлужебныйКлиент.ПолучитьИмяФормыПодбораКонтактов();
	ПараметрыСтруктура.Адрес    = ПоместитьВоВременноеХранилищеКонтакты();
	
	ОповеститьОВыборе(ПараметрыСтруктура);	                                       
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьКонтакты(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;  
	
	Если Не Контакты.Количество() = 0 Тогда		
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьКонтактыПослеЗакрытия", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Список контактов будет перезаписан. Продолжить?", РежимДиалогаВопрос.ДаНет);	
	Иначе
		ЗаполнитьКонтакты();		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонтактыПослеЗакрытия(Результат, Параметры) Экспорт 
	
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
	
	ЗаполнитьКонтакты();

КонецПроцедуры  

&НаКлиенте
Процедура ЗаполнитьКонтакты()
	
	ПараметрыПодключения = ГринАПИ_Служебный.ПолучитьПараметрыПодключенияИзИсточника(ПользовательWhatsApp);
	МассивКонтактов      = ГринАПИ_Служебный.ПолучитьСписокКонтактов(ПараметрыПодключения);
	
	ЗаполнитьКонтактыНаСервере(МассивКонтактов);		
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтактыНаСервере(МассивКонтактов)
	
	Если Не ТипЗнч(МассивКонтактов) = Тип("Массив") Тогда
		
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет данных для загрузки контактов.";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;  
	
	Контакты.Очистить();
	
	КонтактыТаблицаЗначения = Справочники.ГринАПИ_Контакты.ПолучитьКонтактыТаблицаЗначения();

	Для Каждого СтрокаМассивКонтактов Из МассивКонтактов Цикл
		
		ТипКонтакта = СтрокаМассивКонтактов.type;
		
		Если Не ТипКонтакта = ГринАПИ_Служебный.ТипКонтактаПользователь() Тогда			
			Продолжить;
		КонецЕсли; 
		
		НомерТелефона = ГринАПИ_Служебный.ПолучитьНомерТелефона(СтрокаМассивКонтактов.id);
		
		Если Не ЗначениеЗаполнено(НомерТелефона) Тогда			
			Продолжить;
		КонецЕсли; 		
		
		ИмяКонтакта = СтрокаМассивКонтактов.contactName;
		
		Если Не ЗначениеЗаполнено(ИмяКонтакта) Тогда			
			Продолжить;
		КонецЕсли; 	
		
		ОтборСтруктура               = Новый Структура("Наименование, НомерТелефона");
		ОтборСтруктура.Наименование  = ИмяКонтакта;
		ОтборСтруктура.НомерТелефона = Число(НомерТелефона);
		
		НайденныеСтроки              = КонтактыТаблицаЗначения.НайтиСтроки(ОтборСтруктура);
		
		НоваяСтрока = Контакты.Добавить();
		НоваяСтрока.Флаг          = НайденныеСтроки.Количество();
		НоваяСтрока.Наименование  = ИмяКонтакта;
		НоваяСтрока.НомерТелефона = НомерТелефона;
		
	КонецЦикла;                                
	
	Если Не Контакты.Количество() = 0 Тогда		
		Контакты.Сортировать("Наименование");		
	КонецЕсли;	
	
КонецПроцедуры
